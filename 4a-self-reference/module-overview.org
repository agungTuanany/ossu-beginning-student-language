* Self-Reference

Good news! This module programs are much shorter than those from the HtDW and
Compound modules of the course.

But it's still an exciting module. We are going to explore one of the most
beautiful concepts in Computer Science: well formed self-reference. Of course
just the name doesn't mean much. But what it will allows us to do is represent
arbitrarily large amounts of information. You may not have noticed, but so far
we can't do that. We can represent a single city name, but not all cities on the
Weird Sisters Summer 2013 Tour. We can make one cow walk back and forth across
the screen, but not a whole group of cows (much less a herd)

Arbitrary-sized information is information that we don't know the size of in
advance.  A program that can display any number of cows is operating with
arbitrary-sized information.

The videos this module range in length. But there isn't a half hour one! As
before, the longer ones are mostly just a step-by-step working through of a
problem, so while it takes time to watch, it isn't all new content.

Working through the videos and practice materials for this modules should take
approximately 5-7 hours of dedicated time to complete.

* Learning Goals

- Be able to use list mechanisms to construct and destruct list.

- Be able to identify problem domain information of arbitrary size that should
  be represented using lists and lists of structure.

- Be able to use HtDD, HtDF and Data Driven Templates recipes with such data.

- Be able to explain what makes a self-referential data definition well formed
  and identify whether a particular self-referential data definition is
  well-formed.

- Be able to design function that consume and produce lists and lists of
  structure.

- Be able to predict and identify the correspondence between self-references in
  a data definition and natural recursion in functions that operate on the data.
